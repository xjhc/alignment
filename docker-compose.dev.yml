services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./server:/app/server
      - ./core:/app/core
    ports:
      - "8080:8080"
    environment:
      - HOST_UID=${UID:-1000}
      - HOST_GID=${GID:-1000}
      - REDIS_ADDR=redis:6379
      - PORT=8080
    networks:
      - alignment-net
    # depends_on is still useful to control startup order
    depends_on:
      - redis
    stop_signal: SIGINT
    # We are removing the healthcheck from here as it was unreliable.

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile.dev
    volumes:
      - ./client:/app/client
      - ./core:/app/core
      - ./tokens.config.json:/app/tokens.config.json
      - ./tokens:/app/tokens
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://backend:8080
      - HOST_UID=${UID:-1000}
      - HOST_GID=${GID:-1000}
      - CHOKIDAR_USEPOLLING=true
    networks:
      - alignment-net
    depends_on:
      - backend
    command: sh -c "while ! nc -z backend 8080; do echo 'Waiting for backend...' && sleep 1; done && echo 'Backend is up!' && npm run dev"

  redis:
    image: "redis:7-alpine"
    networks:
      - alignment-net
    # We can keep the redis healthcheck as it's simple and reliable.
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  alignment-net:
    driver: bridge